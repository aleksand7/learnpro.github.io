const express = require('express');
const cors = require('cors');
const nodemailer = require('nodemailer');
const bodyParser = require('body-parser');
const path = require('path');

const app = express();
const PORT = process.env.PORT || 3001;

// Middleware
app.use(cors());
app.use(bodyParser.json());

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.use(express.static(path.join(__dirname, './')));

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ—á—Ç—ã —Å environment variables
const createTransporter = () => {
    // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–π –ø–æ—á—Ç—ã
    if (!process.env.EMAIL_USER || !process.env.EMAIL_PASS) {
        console.log('üìß –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: email –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –¥–∞–Ω–Ω—ã–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ');
        return null;
    }

    return nodemailer.createTransporter({
        service: 'gmail',
        auth: {
            user: process.env.EMAIL_USER,
            pass: process.env.EMAIL_PASS
        }
    });
};

const transporter = createTransporter();

// API endpoints
app.post('/api/send-credentials', async (req, res) => {
    try {
        const { firstName, lastName, email, login, password } = req.body;

        console.log('üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', email);

        // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
        if (transporter) {
            try {
                const mailOptions = {
                    from: process.env.EMAIL_USER,
                    to: email,
                    subject: 'üéì LearnPro - –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞',
                    html: `
                        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
                            <div style="background: linear-gradient(135deg, #6366f1, #8b5cf6); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0;">
                                <h1>üéì LearnPro</h1>
                                <p>–í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!</p>
                            </div>
                            <div style="background: #f8fafc; padding: 30px; border-radius: 0 0 10px 10px;">
                                <h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${firstName}!</h2>
                                <p>–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ LearnPro.</p>
                                
                                <div style="background: white; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #6366f1;">
                                    <h3>üîê –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:</h3>
                                    <p><strong>–õ–æ–≥–∏–Ω:</strong> <code style="background: #1e293b; color: white; padding: 5px 10px; border-radius: 4px;">${login}</code></p>
                                    <p><strong>–ü–∞—Ä–æ–ª—å:</strong> <code style="background: #1e293b; color: white; padding: 5px 10px; border-radius: 4px;">${password}</code></p>
                                    <p><strong>Email:</strong> ${email}</p>
                                </div>
                                
                                <div style="background: #fffbeb; border: 1px solid #fef3c7; padding: 15px; border-radius: 8px; margin: 20px 0;">
                                    <strong>‚ö†Ô∏è –í–∞–∂–Ω–æ:</strong> –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ! –û–Ω–∏ –ø–æ—Ç—Ä–µ–±—É—é—Ç—Å—è –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É.
                                </div>
                                
                                <a href="${process.env.SITE_URL || 'https://your-app.onrender.com'}" 
                                   style="display: inline-block; background: #6366f1; color: white; padding: 12px 30px; text-decoration: none; border-radius: 8px; font-weight: bold;">
                                    –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ ‚Üí
                                </a>
                            </div>
                        </div>
                    `
                };

                await transporter.sendMail(mailOptions);
                console.log('‚úÖ Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞:', email);
                
                return res.json({ 
                    success: true, 
                    message: '‚úÖ –ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω! –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –≤–∞—à—É –ø–æ—á—Ç—É.' 
                });

            } catch (emailError) {
                console.log('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', emailError.message);
            }
        }

        // –ï—Å–ª–∏ email –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –æ—Ç–≤–µ—Ç–µ
        res.json({ 
            success: true, 
            message: '‚úÖ –ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω! –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ.',
            credentials: {
                login: login,
                password: password,
                email: email
            }
        });

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', error);
        res.json({ 
            success: false, 
            message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞' 
        });
    }
});

// API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞
app.get('/api/health', (req, res) => {
    res.json({ 
        status: 'OK', 
        message: 'LearnPro server is running',
        timestamp: new Date().toISOString()
    });
});

// –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç index.html (–¥–ª—è SPA)
app.get('*', (req, res) => {
    res.sendFile(path.join(__dirname, 'index.html'));
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
    console.log(`
üéì LearnPro Platform
üìç –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É: ${PORT}
üåê –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${PORT}
üìß Email —Å–µ—Ä–≤–∏—Å: ${transporter ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω' : '–†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏'}
    `);
});