// –î–∞–Ω–Ω—ã–µ –∫—É—Ä—Å–æ–≤
const coursesData = [
    {
        id: 'fullstack',
        title: 'Fullstack-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
        category: 'programming',
        icon: 'üíª',
        level: '–° –Ω—É–ª—è –¥–æ PRO',
        duration: '6 –º–µ—Å—è—Ü–µ–≤',
        description: '–û—Å–≤–æ–π—Ç–µ –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥, –±—ç–∫–µ–Ω–¥ –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö',
        features: [
            'JavaScript –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏',
            'Node.js –∏ Express',
            'React –∏ Vue.js',
            'MongoDB –∏ PostgreSQL',
            'Docker –∏ DevOps',
            '6 —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ'
        ],
        price: 25000,
        oldPrice: 35000,
        popular: true
    },
    {
        id: 'mobile',
        title: '–ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
        category: 'mobile',
        icon: 'üì±',
        level: '–î–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
        duration: '5 –º–µ—Å—è—Ü–µ–≤',
        description: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è iOS –∏ Android —Å –ø–æ–º–æ—â—å—é React Native',
        features: [
            'React Native —Å –Ω—É–ª—è',
            '–ù–∞—Ç–∏–≤–Ω—ã–µ –º–æ–¥—É–ª–∏',
            '–†–∞–±–æ—Ç–∞ —Å API',
            '–ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ AppStore/Google Play',
            'UI/UX –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö',
            '4 –≥–æ—Ç–æ–≤—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è'
        ],
        price: 22000,
        oldPrice: 30000,
        popular: false
    },
    {
        id: 'design',
        title: 'UI/UX –î–∏–∑–∞–π–Ω',
        category: 'design',
        icon: 'üé®',
        level: '–° –Ω—É–ª—è',
        duration: '4 –º–µ—Å—è—Ü–∞',
        description: '–ù–∞—É—á–∏—Ç–µ—Å—å —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—Ä–∞–≤—è—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º',
        features: [
            'Figma –∏ Adobe XD',
            '–ü—Ä–æ—Ç–æ—Ç–∏–ø–∏—Ä–æ–≤–∞–Ω–∏–µ',
            '–î–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º—ã',
            'User Research',
            '–ê–Ω–∏–º–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤',
            '5 –∫–µ–π—Å–æ–≤ –≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ'
        ],
        price: 18000,
        oldPrice: 25000,
        popular: true
    },
    {
        id: 'python',
        title: 'Python & Data Science',
        category: 'data',
        icon: 'üêç',
        level: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
        duration: '7 –º–µ—Å—è—Ü–µ–≤',
        description: '–°—Ç–∞–Ω—å—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º –ø–æ –¥–∞–Ω–Ω—ã–º –∏ –º–∞—à–∏–Ω–Ω–æ–º—É –æ–±—É—á–µ–Ω–∏—é',
        features: [
            'Python –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö',
            'Pandas –∏ NumPy',
            '–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ',
            '–ù–µ–π—Ä–æ—Å–µ—Ç–∏ –∏ TensorFlow',
            '–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö',
            '3 —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞—Ç–∞—Å–µ—Ç–∞'
        ],
        price: 30000,
        oldPrice: 40000,
        popular: false
    },
    {
        id: 'java',
        title: 'Java —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
        category: 'programming',
        icon: '‚òï',
        level: '–î–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
        duration: '6 –º–µ—Å—è—Ü–µ–≤',
        description: '–û—Å–≤–æ–π—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –¥–ª—è enterprise-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
        features: [
            'Java Core –∏ OOP',
            'Spring Framework',
            '–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ Hibernate',
            '–ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã',
            '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
            '4 enterprise-–ø—Ä–æ–µ–∫—Ç–∞'
        ],
        price: 28000,
        oldPrice: 36000,
        popular: false
    }
];

// –¢–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫—É—Ä—Å –¥–ª—è –æ–ø–ª–∞—Ç—ã
let selectedCourse = null;
let selectedPaymentMethod = 'card';

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ –∫—É—Ä—Å–æ–≤
function loadCoursesCatalog() {
    const catalogContainer = document.getElementById('courseCatalog');
    const user = JSON.parse(sessionStorage.getItem('currentUser') || '{}');
    const userCourses = user.courses || [];

    catalogContainer.innerHTML = coursesData.map(course => {
        const isEnrolled = userCourses.includes(course.id);
        
        return `
            <div class="catalog-course-card" data-category="${course.category}">
                ${course.popular ? '<div class="course-badge">üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–π</div>' : ''}
                <div class="course-icon">${course.icon}</div>
                <div class="course-level">${course.level}</div>
                <h3>${course.title}</h3>
                <p>${course.description}</p>
                
                <div class="course-duration">
                    <span>‚è±Ô∏è ${course.duration}</span>
                </div>
                
                <ul class="course-features-list">
                    ${course.features.map(feature => `<li>${feature}</li>`).join('')}
                </ul>
                
                <div class="course-price-section">
                    <div>
                        <span class="course-price">${course.price.toLocaleString()}‚ÇΩ</span>
                        ${course.oldPrice ? `<span class="course-old-price">${course.oldPrice.toLocaleString()}‚ÇΩ</span>` : ''}
                    </div>
                    <button class="subscribe-btn ${isEnrolled ? 'enrolled' : ''}" 
                            onclick="${isEnrolled ? 'startLearning(\'' + course.id + '\')' : 'showPaymentModal(\'' + course.id + '\')'}">
                        ${isEnrolled ? 'üéì –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ' : 'üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É'}
                    </button>
                </div>
            </div>
        `;
    }).join('');
}

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫—É—Ä—Å–æ–≤
function filterCourses(category) {
    const cards = document.querySelectorAll('.catalog-course-card');
    const filterBtns = document.querySelectorAll('.filter-btn');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É —Ñ–∏–ª—å—Ç—Ä–∞
    filterBtns.forEach(btn => btn.classList.remove('active'));
    event.target.classList.add('active');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
    cards.forEach(card => {
        if (category === 'all' || card.dataset.category === category) {
            card.style.display = 'block';
        } else {
            card.style.display = 'none';
        }
    });
}

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ–ø–ª–∞—Ç—ã
function showPaymentModal(courseId) {
    selectedCourse = coursesData.find(course => course.id === courseId);
    if (!selectedCourse) return;

    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
    document.getElementById('paymentCourseTitle').textContent = selectedCourse.title;
    document.getElementById('paymentCoursePrice').textContent = selectedCourse.price.toLocaleString() + '‚ÇΩ';
    document.getElementById('paymentAmount').textContent = selectedCourse.price.toLocaleString() + '‚ÇΩ';
    document.getElementById('summaryCourseName').textContent = selectedCourse.title;
    document.getElementById('finalAmount').textContent = selectedCourse.price.toLocaleString() + '‚ÇΩ';
    document.getElementById('totalAmount').textContent = selectedCourse.price.toLocaleString() + '‚ÇΩ';

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
    document.getElementById('cardNumber').value = '';
    document.getElementById('cardExpiry').value = '';
    document.getElementById('cardCvc').value = '';
    document.getElementById('cardHolder').value = '';
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã
    selectedPaymentMethod = 'card';
    document.querySelectorAll('.payment-method-compact').forEach(m => m.classList.remove('selected'));
    document.querySelector('.payment-method-compact[data-method="card"]').classList.add('selected');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    document.getElementById('paymentModal').style.display = 'block';
}

// –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ–ø–ª–∞—Ç—ã
function closePaymentModal() {
    document.getElementById('paymentModal').style.display = 'none';
    selectedCourse = null;
}

// –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
function selectPaymentMethod(method) {
    selectedPaymentMethod = method;
    document.querySelectorAll('.payment-method-compact').forEach(m => m.classList.remove('selected'));
    event.target.closest('.payment-method-compact').classList.add('selected');
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø–ª–∞—Ç—ã
function processPayment() {
    if (!selectedCourse) {
        alert('–ö—É—Ä—Å –Ω–µ –≤—ã–±—Ä–∞–Ω!');
        return;
    }
    
    const cardNumber = document.getElementById('cardNumber').value;
    const cardExpiry = document.getElementById('cardExpiry').value;
    const cardCvc = document.getElementById('cardCvc').value;
    const cardHolder = document.getElementById('cardHolder').value;
    
    // –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
    if (!cardNumber || !cardExpiry || !cardCvc || !cardHolder) {
        alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –∫–∞—Ä—Ç—ã');
        return;
    }
    
    // –ò–º–∏—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
    alert(`‚úÖ –ö—É—Ä—Å "${selectedCourse.title}" —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω!`);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫—É—Ä—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    const user = JSON.parse(sessionStorage.getItem('currentUser'));
    if (user && !user.courses.includes(selectedCourse.id)) {
        user.courses.push(selectedCourse.id);
        sessionStorage.setItem('currentUser', JSON.stringify(user));
        updateUserInStorage(user);
    }
    
    closePaymentModal();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ç–∞–ª–æ–≥
    setTimeout(() => {
        loadCoursesCatalog();
        window.location.href = 'dashboard.html';
    }, 1000);
}

// –ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ (–¥–ª—è —É–∂–µ –æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –∫—É—Ä—Å–æ–≤)
function startLearning(courseId) {
    alert(`–ó–∞–ø—É—Å–∫–∞–µ–º –∫—É—Ä—Å "${coursesData.find(c => c.id === courseId)?.title}"! üöÄ`);
}

// –û–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ localStorage
function updateUserInStorage(updatedUser) {
    const users = JSON.parse(localStorage.getItem('learnpro_users')) || [];
    const userIndex = users.findIndex(u => u.email === updatedUser.email);
    
    if (userIndex !== -1) {
        users[userIndex] = updatedUser;
        localStorage.setItem('learnpro_users', JSON.stringify(users));
    }
}

// –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
function logout() {
    sessionStorage.removeItem('currentUser');
    window.location.href = 'index.html';
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    const user = JSON.parse(sessionStorage.getItem('currentUser') || '{}');
    if (!user.email) {
        window.location.href = 'index.html';
        return;
    }
    
    loadCoursesCatalog();
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
document.addEventListener('click', function(event) {
    if (event.target.classList.contains('modal')) {
        if (event.target.id === 'paymentModal') {
            closePaymentModal();
        }
    }
});

document.addEventListener('keydown', function(event) {
    if (event.key === 'Escape') {
        const paymentModal = document.getElementById('paymentModal');
        if (paymentModal && paymentModal.style.display === 'block') {
            closePaymentModal();
        }
    }
});